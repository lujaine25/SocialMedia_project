/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Frontend;

import java.io.File;
import javax.swing.JFileChooser;
import Backend.UpdateProfile;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author DELL
 */
public class EditProfile extends javax.swing.JFrame {
    private String path = null;
    private final String UserId;
    private final ProfilePage profilePage;
 

    /**
     * Creates new form EditProfile
     * @param UserId
     */
    public EditProfile(String UserId, ProfilePage profilePage) {
        initComponents();
          setTitle(" Edit Profile");
          this.UserId=UserId;
          this.profilePage=profilePage;
          setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ProfilePhoto = new javax.swing.JButton();
        CoverPhoto = new javax.swing.JButton();
        password = new javax.swing.JButton();
        bio = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ProfilePhoto.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        ProfilePhoto.setText("Update Profile Photo");
        ProfilePhoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProfilePhotoActionPerformed(evt);
            }
        });

        CoverPhoto.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        CoverPhoto.setText("Update Cover Photo");
        CoverPhoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CoverPhotoActionPerformed(evt);
            }
        });

        password.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        password.setText("Update Password");
        password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordActionPerformed(evt);
            }
        });

        bio.setFont(new java.awt.Font("Rockwell", 1, 14)); // NOI18N
        bio.setText("Update Bio");
        bio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(169, 169, 169)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ProfilePhoto)
                    .addComponent(bio, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CoverPhoto))
                .addContainerGap(176, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(ProfilePhoto)
                .addGap(50, 50, 50)
                .addComponent(CoverPhoto)
                .addGap(58, 58, 58)
                .addComponent(password)
                .addGap(51, 51, 51)
                .addComponent(bio)
                .addContainerGap(88, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ProfilePhotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProfilePhotoActionPerformed
       JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Choose a photo");
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Image Files", "jpg", "png", "jpeg", "gif"));
        int userSelection = fileChooser.showOpenDialog(this);
        if(userSelection == JFileChooser.APPROVE_OPTION){
            File file = fileChooser.getSelectedFile();
            path = file.getAbsolutePath();
            UpdateProfile profileEditor =new UpdateProfile();
           try {
               profileEditor.updateProfilePhoto(path,UserId );
               Profile_Updates.RefreshProfile();
               profilePage.updateProfile();
               profilePage.updateProfilePosts();
               dispose();
           } catch (IOException ex) {
               Logger.getLogger(EditProfile.class.getName()).log(Level.SEVERE, null, ex);
           }
        }
        else{
            path = "";
        }
    }//GEN-LAST:event_ProfilePhotoActionPerformed

    private void CoverPhotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CoverPhotoActionPerformed
         JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Choose a photo");
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fileChooser.setFileFilter(new javax.swing.filechooser.FileNameExtensionFilter("Image Files", "jpg", "png", "jpeg", "gif"));
        int userSelection = fileChooser.showOpenDialog(this);
        if(userSelection == JFileChooser.APPROVE_OPTION){
            File file = fileChooser.getSelectedFile();
            path = file.getAbsolutePath();
            UpdateProfile profileEditor =new UpdateProfile();
           try {
               profileEditor.updateCoverPhoto(path, UserId);
               Profile_Updates.RefreshProfile();
               profilePage.updateProfile();
               profilePage.updateProfilePosts();
               dispose();
           } catch (IOException ex) {
               Logger.getLogger(EditProfile.class.getName()).log(Level.SEVERE, null, ex);
           }
        }
        else{
            path = "";
        }

    }//GEN-LAST:event_CoverPhotoActionPerformed

    private void passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordActionPerformed
        // Show a dialog box to ask the user for their new password
        String newPassword = JOptionPane.showInputDialog("Enter new password:");

        // Show a dialog box to confirm the password
        String confirmPassword = JOptionPane.showInputDialog("Confirm new password:");

        // Check if both passwords match
        if (newPassword != null && confirmPassword != null && newPassword.equals(confirmPassword)) {
                       UpdateProfile profileEditor=new UpdateProfile();
            try {
                  profileEditor.updatePassword(newPassword, UserId);
                Profile_Updates.RefreshProfile();
                profilePage.updateProfile();
                profilePage.updateProfilePosts();
                dispose();
            } catch (IOException ex) {
                Logger.getLogger(EditProfile.class.getName()).log(Level.SEVERE, null, ex);
            }
             JOptionPane.showMessageDialog(null, "Password updated successfully!");
        } else {
            JOptionPane.showMessageDialog(null, "Passwords do not match or input was canceled!");
        }
    
    }//GEN-LAST:event_passwordActionPerformed

    private void bioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bioActionPerformed
        // Take new bio input from the user
        String newBio = JOptionPane.showInputDialog("Enter new bio:");

        if (newBio != null && !newBio.trim().isEmpty()) {
            // Call your updateBio  to update the bio for the user
             UpdateProfile profileEditor=new UpdateProfile();
            try {
             profileEditor.updateBio(newBio, UserId);
                Profile_Updates.RefreshProfile();
                profilePage.updateProfile();
                profilePage.updateProfilePosts();
                dispose();
            } catch (IOException ex) {
                Logger.getLogger(EditProfile.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Bio cannot be empty or input was canceled!");
        }
    
    }//GEN-LAST:event_bioActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CoverPhoto;
    private javax.swing.JButton ProfilePhoto;
    private javax.swing.JButton bio;
    private javax.swing.JButton password;
    // End of variables declaration//GEN-END:variables
}
